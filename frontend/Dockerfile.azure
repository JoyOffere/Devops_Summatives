# Azure-optimized Frontend Dockerfile
# Multi-stage build for production deployment

# Build stage
FROM node:18-alpine AS builder
WORKDIR /app

# Accept build arguments
ARG REACT_APP_API_URL

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm install --silent

# Copy source code
COPY . .

# Set environment variable for the build
ENV REACT_APP_API_URL=$REACT_APP_API_URL

# Debug: Show the environment variable value
RUN echo "REACT_APP_API_URL is set to: $REACT_APP_API_URL"

# Build the application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine AS production

# Copy built application
COPY --from=builder /app/build /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Set permissions
RUN mkdir -p /run/nginx /var/cache/nginx /var/log/nginx && \
    chown -R nextjs:nodejs /usr/share/nginx/html && \
    chown -R nextjs:nodejs /var/cache/nginx && \
    chown -R nextjs:nodejs /var/log/nginx && \
    chown -R nextjs:nodejs /run/nginx && \
    chown -R nextjs:nodejs /etc/nginx/conf.d

# Switch to non-root user
USER nextjs

# Expose port (Azure App Service will map this)
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
